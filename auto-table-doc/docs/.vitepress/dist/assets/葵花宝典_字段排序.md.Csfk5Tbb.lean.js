import{_ as e,c as t,a2 as r,o}from"./chunks/framework.DVcYaelC.js";const u=JSON.parse('{"title":"葵花宝典","description":null,"frontmatter":{"title":"葵花宝典","description":null},"headers":[],"relativePath":"葵花宝典/字段排序.md","filePath":"葵花宝典/字段排序.md","lastUpdated":1749533101000}'),l={name:"葵花宝典/字段排序.md"};function n(i,a,s,d,h,p){return o(),t("div",null,a[0]||(a[0]=[r('<h2 id="字段排序" tabindex="-1">字段排序 <a class="header-anchor" href="#字段排序" aria-label="Permalink to &quot;字段排序&quot;">​</a></h2><h3 id="需求1" tabindex="-1">需求1 <a class="header-anchor" href="#需求1" aria-label="Permalink to &quot;需求1&quot;">​</a></h3><p>mysql数据库希望数据库与实体字段的排序一致</p><h3 id="功能1" tabindex="-1">功能1 <a class="header-anchor" href="#功能1" aria-label="Permalink to &quot;功能1&quot;">​</a></h3><p>框架内部自动针对mysql实现了列顺序与表字段顺序一致性。</p><p>自[1.3.0]开始，新增了一个<a href="/配置.html#super-insert-position">superInsertPosition</a>配置，进一步控制父类的字段排序是在子类后面还是前面。</p><h3 id="需求2" tabindex="-1">需求2 <a class="header-anchor" href="#需求2" aria-label="Permalink to &quot;需求2&quot;">​</a></h3><p>实体存在父类，通常把ID、创建人、创建时间等通用字段提取到父类，同时希望ID排首位，创建人、创建时间排末尾</p><h3 id="功能2" tabindex="-1">功能2 <a class="header-anchor" href="#功能2" aria-label="Permalink to &quot;功能2&quot;">​</a></h3><p>通过@AutoColumn的sort属性自定义顺序。</p><p>自[2.3.5]开始，<code>@AutoColumn</code>新增了一个[sort]配置，可自定义字段顺序，1代表第一个，2代表第二个，以此类推，-1代表最后一个，-2代表倒数第二个，以此类推。</p>',11)]))}const m=e(l,[["render",n]]);export{u as __pageData,m as default};
