import{_ as i,c as a,a2 as t,o as l}from"./chunks/framework.DVcYaelC.js";const E=JSON.parse('{"title":"葵花宝典","description":null,"frontmatter":{"title":"葵花宝典","description":null},"headers":[],"relativePath":"葵花宝典/自动初始化数据.md","filePath":"葵花宝典/自动初始化数据.md","lastUpdated":1749533101000}'),n={name:"葵花宝典/自动初始化数据.md"};function h(e,s,p,k,d,r){return l(),a("div",null,s[0]||(s[0]=[t(`<h2 id="自动初始化数据、sql脚本" tabindex="-1">自动初始化数据、sql脚本 <a class="header-anchor" href="#自动初始化数据、sql脚本" aria-label="Permalink to &quot;自动初始化数据、sql脚本&quot;">​</a></h2><h3 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h3><p>在自动创建完表格后，我们的系统通常需要初始化数据，比如用户表，权限表等等。</p><h3 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h3><blockquote><p>默认库/表数据初始化有三种方式：</p></blockquote><h4 id="✈️-方式一-根据名称自动匹配sql脚本" tabindex="-1">✈️ 方式一：根据名称自动匹配sql脚本 <a class="header-anchor" href="#✈️-方式一-根据名称自动匹配sql脚本" aria-label="Permalink to &quot;✈️ 方式一：根据名称自动匹配sql脚本&quot;">​</a></h4><blockquote><p>具体配置见：<a href="/配置.html#init-data">auto-table.recordSql</a></p></blockquote><ul><li>单数据源场景（没有指定数据源的情况） <ol><li><code>sql/user.sql</code> -&gt; 指定user表的脚本（只会在指定表创建完成后执行一次） <ul><li><code>sql</code>目录支持配置项<a href="/配置.html#base-path">base-path</a>更改</li><li><a href="/配置.html#base-path">base-path</a>配置，支持多库适配的模式，引入了<code>{dialect}</code>变量</li></ul></li><li><code>sql/_init_.sql</code> -&gt; 表示整个库的相关脚本（只会在库创建后，且所有表创建完成后执行一次） <ul><li><code>_init_</code>为默认值，可以通过配置项<a href="/配置.html#default-init-file-name">default-init-file-name</a>更改</li></ul></li></ol></li><li>多数据源场景（有多套数据库，每个库属于一个数据源） <ol><li><code>sql</code>/datasource1/user.sql -&gt; 表示数据源<code>datasource1</code>下的<code>user</code>表脚本（只会在指定表创建完成后执行一次）</li><li><code>sql</code>/datasource1.sql -&gt; 表示数据源<code>datasource1</code>下整个数据库的相关脚本（只会在库创建后，且所有表创建完成后执行一次）</li></ol></li></ul><h4 id="🚄-方式二-手动指定表的sql脚本" tabindex="-1">🚄 方式二：手动指定表的sql脚本 <a class="header-anchor" href="#🚄-方式二-手动指定表的sql脚本" aria-label="Permalink to &quot;🚄 方式二：手动指定表的sql脚本&quot;">​</a></h4><blockquote><p>通过<code>@AutoTable</code>的<code>initSql</code>属性指定sql脚本位置</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AutoTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;自定义sql文件初始化数据&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initSql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;classpath:customize_path/InitDataCustomizeFile.sql&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataCustomizeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">多库适配</p><p>initSql的值支持当前数据库类型<code>{dialect}</code>作为参数</p><p>示例：</p><blockquote><p>classpath:path/<code>{dialect}</code>/user.sql</p></blockquote><p>不同数据库实际存在的文件为：</p><blockquote><p>classpath:path/Mysql/user.sql</p></blockquote><blockquote><p>classpath:path/Oralce/user.sql</p></blockquote></div><h4 id="🚤-方式三-通过代码构建数据集合" tabindex="-1">🚤 方式三：通过代码构建数据集合 <a class="header-anchor" href="#🚤-方式三-通过代码构建数据集合" aria-label="Permalink to &quot;🚤 方式三：通过代码构建数据集合&quot;">​</a></h4><blockquote><p>通过<code>@InitDataList</code>注解指定java方法返回的数据集合。</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NoArgsConstructor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AllArgsConstructor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AutoTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;用java方法初始化数据&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InitDataList</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInitData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zhang&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;li&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InitDataList</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInitData2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wang&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitDataJavaMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;liu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><ol><li>必须是静态方法</li><li>需要<code>@InitDataList</code>注解标注</li><li>返回值必须是List&lt;Entity&gt;</li><li>该方法只能在Entity类中定义</li></ol></div>`,16)]))}const c=i(n,[["render",h]]);export{E as __pageData,c as default};
