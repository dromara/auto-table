import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.BcEugKYC.js";const y=JSON.parse('{"title":"类型转换器","description":null,"frontmatter":{"title":"类型转换器","description":null},"headers":[],"relativePath":"指南/自定义/类型转换器.md","filePath":"指南/自定义/类型转换器.md","lastUpdated":1731512067000}'),t={name:"指南/自定义/类型转换器.md"},n=e(`<h1 id="类型转换器" tabindex="-1">类型转换器 <a class="header-anchor" href="#类型转换器" aria-label="Permalink to &quot;类型转换器&quot;">​</a></h1><p>在使用AutoTable的时候，大部分的类型转化框架都考虑到了，但是如果仍有部分特殊需求，需要实现<code>JavaTypeToDatabaseTypeConverter</code>自定义java类型到数据库类型的转换逻辑。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 道理同上，spring boot应用直接将接口实现注入容器即可</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Component</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomJavaTypeToDatabaseTypeConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JavaTypeToDatabaseTypeConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 普通java应用(非spring boot)，手动设置类型转换器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AutoTableGlobalConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setJavaTypeToDatabaseTypeConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomJavaTypeToDatabaseTypeConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div>`,3),p=[n];function l(h,k,o,r,d,c){return i(),a("div",null,p)}const E=s(t,[["render",l]]);export{y as __pageData,E as default};
